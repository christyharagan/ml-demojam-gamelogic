{
  "name": "speckle",
  "version": "0.2.0",
  "description": "Create SPARQL rules and queries using a typed API",
  "main": "lib/index.js",
  "typings": "lib/index",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/christyharagan/speckle.git"
  },
  "author": {
    "name": "Christy Haragan",
    "email": "christy.haragan.github@gmail.com",
    "url": "https://github.com/christyharagan"
  },
  "keywords": [
    "sparql",
    "builder",
    "typescript"
  ],
  "license": "MIT",
  "readme": "Speckle Library\n==\n\nOverview\n--\n\nCreate SPARQL rules and queries using a typed API\n\nUsage\n--\n\nInstall:\n```\nnpm install speckle\n```\n\nBasic Usage:\n\n```TypeScript\nimport * as s from 'speckle'\n\nlet ex = s.prefix('l', 'http://example/')\n\n// Create a sparql rule set\nlet city = s.variable('city')\nlet country = s.variable('country')\nlet continent = s.variable('continent')\n\nlet rule = rule('cityInContinent')\n  .when(city, ex.uri('isIn'), country)\n  .and(country, ex.uri('isPartOf'), continent)\n  .then(city, ex.uri('isIn'), continent)\n\n// Serialise to SPARQL\nlet sparql = rule.toSparql()\n\n// Create a sparql query\nlet query = s.select(continent).where(ex.uri('London'), logic.uri('isIn'), continent)\n\n// Serialise to SPARQL\nsparql = query.toSparql()\n```\n",
  "readmeFilename": "README.md",
  "gitHead": "435fee09e3122d62ef4ae6b5aa201575ee096899",
  "bugs": {
    "url": "https://github.com/christyharagan/speckle/issues"
  },
  "homepage": "https://github.com/christyharagan/speckle#readme",
  "_id": "speckle@0.2.0",
  "scripts": {},
  "_shasum": "6ae60e9a5aef6f23517f278b211b8c60ca17974b",
  "_from": "speckle@>=0.2.0 <0.3.0"
}

{
  "name": "uservices-socket.io-server",
  "version": "0.4.1",
  "description": "Deploy remote proxies of services on the server via socket.io",
  "main": "lib/index.js",
  "typings": "lib/index.d.ts",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/christyharagan/uservices-socket.io-server.git"
  },
  "author": {
    "name": "Christy Haragan",
    "email": "christy.haragan.github@gmail.com",
    "url": "https://github.com/christyharagan"
  },
  "keywords": [
    "service",
    "portable",
    "asynchronous",
    "observable",
    "actor",
    "micro",
    "socket.io",
    "server"
  ],
  "license": "MIT",
  "dependencies": {
    "rx": "^2.5.3",
    "socket.io": "^1.3.5",
    "uservices": "^0.6.1"
  },
  "readme": "Micro (u)Services - Socket.IO Server Proxies\n==\n\nOverview\n--\n\nCreate remote proxies of [uServices](https://github.com/christyharagan/uservices) via socket.io. This package is for the server.\n\nThis is a fully-symmetric approach. In other words uServices on the server can be made available as remote proxies via the localProxy implementation.\n\nAlternatively uServices on other tiers can be made available to the server via the remoteProxy implementation.\n\nUsage\n--\n\nInstall:\n```\nnpm install uservices-socket.io.-server\n```\n\nBasic Usage: (see the uServices project for examples on how to create a uService spec)\n\n```TypeScript\nimport {createLocalProxy} from 'uservices-socket.io-server'\n\nlet httpServer = http.createServer(fn)\nlet ioServer = io(httpServer)\ncreateLocalProxy(ioServer, chatSpec, chatService)\n\n```\n",
  "readmeFilename": "README.md",
  "gitHead": "95ea243a8537312a15160f25656b9dafea579abd",
  "bugs": {
    "url": "https://github.com/christyharagan/uservices-socket.io-server/issues"
  },
  "homepage": "https://github.com/christyharagan/uservices-socket.io-server#readme",
  "_id": "uservices-socket.io-server@0.4.1",
  "scripts": {},
  "_shasum": "d45bb9436c3aaddc967930ffe582a32a33e10d80",
  "_from": "uservices-socket.io-server@>=0.4.0 <0.5.0"
}
